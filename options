<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>PlainPost</title>

    <link rel="stylesheet" href="style.css">
    <link rel="icon" href="favicon.ico" type="image/x-icon" />

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script type="text/javascript">
        async function conectar(acao, extra = {}) {
            const token = localStorage.getItem("Mail-Token");
            if (!token) { window.location.href = "login"; return; } 

            try {
                const resposta = await fetch("https://servidordomal.fun/api/mail", { method: "POST", headers: { "Content-Type": "application/json", "Authorization": token }, body: JSON.stringify({ action: acao, ...extra }), });
                const dados = await resposta.json();

                return dados.response;
            } catch { return; }
        }

        window.onload = () => {
            document.getElementById("back").addEventListener("click", () => { window.location.href = "/mail"; });

            document.getElementById("changetag").addEventListener("click", async () => {
                const token = localStorage.getItem("Mail-Token");
                if (!token) { window.location.href = "login"; return; } 

                const roles = await conectar("roles");
                if (!roles || roles == "No roles") { return Swal.fire('Erro', 'Você não possui TAGs.', 'error'); }

                const opcoes = roles.split(",").map(tag => `<option value="${tag}">${tag}</option>`).join("");

                const { value: tag } = await Swal.fire({ title: 'Trocar TAG', html: `<select id="swal-trocar" class="swal2-select">${opcoes}</select>`, preConfirm: () => document.getElementById('swal-trocar').value, showCancelButton: true });
                if (!tag) return;

                try {
                    const resposta = await fetch("https://servidordomal.fun/api/mail", { method: "POST", headers: { "Content-Type": "application/json", "Authorization": token }, body: JSON.stringify({ action: "changerole", role: tag }), });
                    
                    if (resposta.status == 200) { Swal.fire('Sucesso', 'TAG trocada com sucesso!', 'success'); }
                    else if (resposta.status == 404) { Swal.fire('Erro', 'Você não possui essa TAG!', 'error'); }
                    else if (resposta.status == 400) { Swal.fire('Erro', 'TAG inválida!', 'error'); }
                    else { Swal.fire('Erro', 'Erro ao trocar TAG.', 'error'); }
                } catch { Swal.fire('Erro', 'Erro na conexão.', 'error'); } 
            });
            document.getElementById("buytag").addEventListener("click", async () => {
                const token = localStorage.getItem("Mail-Token");
                if (!token) { window.location.href = "login"; return; } 
                
                const roles = await conectar("listroles");
                if (!roles || roles == "No roles") { return Swal.fire('Erro', 'Nenhuma TAG disponível.', 'error'); }

                const opcoes = roles.split("|").map(r => { const [tag, preco] = r.split(":"); return `<option value="${tag}">${tag} - ${preco} moedas</option>`; }).join("");

                const { value: tag } = await Swal.fire({ title: 'Comprar TAG', html: `<select id="swal-tag" class="swal2-select">${opcoes}</select>`, preConfirm: () => document.getElementById('swal-tag').value, showCancelButton: true });
                if (!tag) return;

                try {
                    const resposta = await fetch("https://servidordomal.fun/api/mail", { method: "POST", headers: { "Content-Type": "application/json", "Authorization": token }, body: JSON.stringify({ action: "buyrole", role: tag }), });
                    
                    if (resposta.status == 200) { Swal.fire('Sucesso', 'TAG comprada com sucesso!', 'success'); }
                    else if (resposta.status == 404) { Swal.fire('Erro', 'TAG não disponível!', 'error'); }
                    else if (resposta.status == 406) { Swal.fire('Erro', 'Você já possui esta TAG!', 'error'); }
                    else if (resposta.status == 401) { Swal.fire('Erro', 'Saldo insuficiente!', 'error'); }
                    else { Swal.fire('Erro', 'Erro ao comprar TAG.', 'error'); }
                } catch { Swal.fire('Erro', 'Erro na conexão.', 'error'); } 
            });
        }
    </script>
</head>
<body>
    <div id="conteiner">
        <h2>Painel da Conta</h2><br>
        <button id="back" type="button">Retornar</button>
        <button id="changetag" type="button">Trocar TAG</button>
        <button id="buytag" type="button">Comprar TAG</button>
    </div>
</body>
</html>

